<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.HistoryDAO">
  <resultMap id="BaseResultMap" type="com.example.model.History">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="conversation_id" jdbcType="VARCHAR" property="conversationId" />
    <result column="model" jdbcType="VARCHAR" property="model" />
    <result column="temperature" jdbcType="DOUBLE" property="temperature" />
    <result column="max_tokens" jdbcType="INTEGER" property="maxTokens" />
    <result column="question" jdbcType="VARCHAR" property="question" />
    <result column="answer" jdbcType="VARCHAR" property="answer" />
    <result column="finish_reason" jdbcType="VARCHAR" property="finishReason" />
    <result column="date_time" jdbcType="TIMESTAMP" property="dateTime" />
    <result column="latest" jdbcType="INTEGER" property="latest" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, conversation_id, model, temperature, max_tokens, question, answer, finish_reason, 
    date_time, latest, response
  </sql>
  <select id="selectByExample" parameterType="com.example.model.HistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from history
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from history
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.model.HistoryExample">
    delete from history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.model.History">
    insert into history (id, conversation_id, model, 
      temperature, max_tokens, question, 
      answer, finish_reason, date_time, 
      latest, response)
    values (#{id,jdbcType=INTEGER}, #{conversationId,jdbcType=VARCHAR}, #{model,jdbcType=VARCHAR}, 
      #{temperature,jdbcType=DOUBLE}, #{maxTokens,jdbcType=INTEGER}, #{question,jdbcType=VARCHAR}, 
      #{answer,jdbcType=VARCHAR}, #{finishReason,jdbcType=VARCHAR}, #{dateTime,jdbcType=TIMESTAMP}, 
      #{latest,jdbcType=INTEGER}, #{response,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.model.History">
    insert into history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="conversationId != null">
        conversation_id,
      </if>
      <if test="model != null">
        model,
      </if>
      <if test="temperature != null">
        temperature,
      </if>
      <if test="maxTokens != null">
        max_tokens,
      </if>
      <if test="question != null">
        question,
      </if>
      <if test="answer != null">
        answer,
      </if>
      <if test="finishReason != null">
        finish_reason,
      </if>
      <if test="dateTime != null">
        date_time,
      </if>
      <if test="latest != null">
        latest,
      </if>
      <if test="response != null">
        response,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="conversationId != null">
        #{conversationId,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="temperature != null">
        #{temperature,jdbcType=DOUBLE},
      </if>
      <if test="maxTokens != null">
        #{maxTokens,jdbcType=INTEGER},
      </if>
      <if test="question != null">
        #{question,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="finishReason != null">
        #{finishReason,jdbcType=VARCHAR},
      </if>
      <if test="dateTime != null">
        #{dateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="latest != null">
        #{latest,jdbcType=INTEGER},
      </if>
      <if test="response != null">
        #{response,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.model.HistoryExample" resultType="java.lang.Long">
    select count(*) from history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update history
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.conversationId != null">
        conversation_id = #{record.conversationId,jdbcType=VARCHAR},
      </if>
      <if test="record.model != null">
        model = #{record.model,jdbcType=VARCHAR},
      </if>
      <if test="record.temperature != null">
        temperature = #{record.temperature,jdbcType=DOUBLE},
      </if>
      <if test="record.maxTokens != null">
        max_tokens = #{record.maxTokens,jdbcType=INTEGER},
      </if>
      <if test="record.question != null">
        question = #{record.question,jdbcType=VARCHAR},
      </if>
      <if test="record.answer != null">
        answer = #{record.answer,jdbcType=VARCHAR},
      </if>
      <if test="record.finishReason != null">
        finish_reason = #{record.finishReason,jdbcType=VARCHAR},
      </if>
      <if test="record.dateTime != null">
        date_time = #{record.dateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.latest != null">
        latest = #{record.latest,jdbcType=INTEGER},
      </if>
      <if test="record.response != null">
        latest = #{record.response,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update history
    set id = #{record.id,jdbcType=INTEGER},
      conversation_id = #{record.conversationId,jdbcType=VARCHAR},
      model = #{record.model,jdbcType=VARCHAR},
      temperature = #{record.temperature,jdbcType=DOUBLE},
      max_tokens = #{record.maxTokens,jdbcType=INTEGER},
      question = #{record.question,jdbcType=VARCHAR},
      answer = #{record.answer,jdbcType=VARCHAR},
      finish_reason = #{record.finishReason,jdbcType=VARCHAR},
      date_time = #{record.dateTime,jdbcType=TIMESTAMP},
      latest = #{record.latest,jdbcType=INTEGER},
      response = #{record.response,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.model.History">
    update history
    <set>
      <if test="conversationId != null">
        conversation_id = #{conversationId,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="temperature != null">
        temperature = #{temperature,jdbcType=DOUBLE},
      </if>
      <if test="maxTokens != null">
        max_tokens = #{maxTokens,jdbcType=INTEGER},
      </if>
      <if test="question != null">
        question = #{question,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="finishReason != null">
        finish_reason = #{finishReason,jdbcType=VARCHAR},
      </if>
      <if test="dateTime != null">
        date_time = #{dateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="latest != null">
        latest = #{latest,jdbcType=INTEGER},
      </if>
      <if test="response != null">
        response = #{response,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.model.History">
    update history
    set conversation_id = #{conversationId,jdbcType=VARCHAR},
      model = #{model,jdbcType=VARCHAR},
      temperature = #{temperature,jdbcType=DOUBLE},
      max_tokens = #{maxTokens,jdbcType=INTEGER},
      question = #{question,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      finish_reason = #{finishReason,jdbcType=VARCHAR},
      date_time = #{dateTime,jdbcType=TIMESTAMP},
      latest = #{latest,jdbcType=INTEGER},
      response = #{response,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getConversationList" resultType="java.util.List">
    select distinct conversation_id from history
  </select>
</mapper>